/**
 * Intégration du système de recommandation au quiz nutritionnel
 * Ce fichier connecte l'algorithme de recommandation aux réponses du quiz
 * et génère l'interface utilisateur pour afficher les résultats
 */

// Définition des interfaces pour le typage
interface QuizResponses {
  symptomes: string[];
  objectifs: string[];
  alimentation: string;
  activitePhysique: string;
  qualiteSommeil: string;
  niveauStress: string;
  consommationViande: string;
  consommationPoisson: string;
  fruitsLegumes: string;
}

interface Recommendation {
  rank: number;
  name: string;
  category: string;
  efficacyPercentage: number;
  dosage: string;
  benefits: string[];
  naturalSources: string;
  timeToEffect: string;
  cautions?: string;
  isPrimary: boolean;
}

interface RecommendationSystem {
  getRecommendations(quizResponses: QuizResponses): Recommendation[];
}

// Importer le système de recommandation
// Note: Pour TypeScript, vous devrez créer des déclarations de types appropriées
// ou utiliser import/export avec des modules ES6
declare const RecommendationSystem: new () => RecommendationSystem;

/**
 * Classe principale pour l'intégration du système de recommandation
 */
class NutritionRecommender {
  private quizResponses: QuizResponses;
  private recommender: RecommendationSystem;
  
  constructor() {
    this.recommender = new RecommendationSystem();
    this.quizResponses = {
      symptomes: [],
      objectifs: [],
      alimentation: "",
      activitePhysique: "",
      qualiteSommeil: "",
      niveauStress: "",
      consommationViande: "",
      consommationPoisson: "",
      fruitsLegumes: ""
    };
    
    // Initialiser les écouteurs d'événements une fois le DOM chargé
    document.addEventListener('DOMContentLoaded', () => this.initEventListeners());
  }
  
  /**
   * Initialise les écouteurs d'événements pour le quiz
   */
  private initEventListeners(): void {
    // Écouteur pour le bouton "Voir mes résultats"
    const resultsButtons = document.querySelectorAll('button');
    resultsButtons.forEach(button => {
      if (button.textContent?.includes("Voir mes résultats")) {
        button.addEventListener('click', () => this.processQuizResponses());
      }
    });
    
    // Écouteurs pour les cases à cocher des symptômes
    this.initSymptomListeners();
    
    // Écouteurs pour les cases à cocher des objectifs
    this.initObjectiveListeners();
    
    // Écouteurs pour les options de régime alimentaire
    this.initDietListeners();
    
    // Écouteurs pour les options d'activité physique
    this.initActivityListeners();
    
    // Écouteurs pour les options de qualité du sommeil
    this.initSleepListeners();
    
    // Écouteurs pour les options de niveau de stress
    this.initStressListeners();
    
    // Écouteurs pour les options de consommation de viande
    this.initMeatConsumptionListeners();
    
    // Écouteurs pour les options de consommation de poisson
    this.initFishConsumptionListeners();
    
    // Écouteurs pour les options de consommation de fruits et légumes
    this.initFruitVegListeners();
  }
  
  /**
   * Initialise les écouteurs pour les symptômes
   */
  private initSymptomListeners(): void {
    const symptomCheckboxes = document.querySelectorAll('.symptomes-section input[type="checkbox"]');
    symptomCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const nextElement = target.nextElementSibling;
        if (!nextElement) return;
        
        const symptom = nextElement.textContent || "";
        if (target.checked) {
          this.quizResponses.symptomes.push(symptom);
        } else {
          const index = this.quizResponses.symptomes.indexOf(symptom);
          if (index !== -1) {
            this.quizResponses.symptomes.splice(index, 1);
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour les objectifs
   */
  private initObjectiveListeners(): void {
    const objectiveCheckboxes = document.querySelectorAll('.objectifs-section input[type="checkbox"]');
    objectiveCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const nextElement = target.nextElementSibling;
        if (!nextElement) return;
        
        const objective = nextElement.textContent || "";
        if (target.checked) {
          this.quizResponses.objectifs.push(objective);
        } else {
          const index = this.quizResponses.objectifs.indexOf(objective);
          if (index !== -1) {
            this.quizResponses.objectifs.splice(index, 1);
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour le régime alimentaire
   */
  private initDietListeners(): void {
    const dietRadios = document.querySelectorAll('.alimentation-section input[type="radio"]');
    dietRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.alimentation = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour l'activité physique
   */
  private initActivityListeners(): void {
    const activityRadios = document.querySelectorAll('.activite-physique-section input[type="radio"]');
    activityRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.activitePhysique = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour la qualité du sommeil
   */
  private initSleepListeners(): void {
    const sleepRadios = document.querySelectorAll('.sommeil-section input[type="radio"]');
    sleepRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.qualiteSommeil = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour le niveau de stress
   */
  private initStressListeners(): void {
    const stressRadios = document.querySelectorAll('.stress-section input[type="radio"]');
    stressRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.niveauStress = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour la consommation de viande
   */
  private initMeatConsumptionListeners(): void {
    const meatRadios = document.querySelectorAll('.viande-section input[type="radio"]');
    meatRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.consommationViande = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour la consommation de poisson
   */
  private initFishConsumptionListeners(): void {
    const fishRadios = document.querySelectorAll('.poisson-section input[type="radio"]');
    fishRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.consommationPoisson = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Initialise les écouteurs pour la consommation de fruits et légumes
   */
  private initFruitVegListeners(): void {
    const fruitVegRadios = document.querySelectorAll('.fruits-legumes-section input[type="radio"]');
    fruitVegRadios.forEach(radio => {
      radio.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        if (target.checked) {
          const nextElement = target.nextElementSibling;
          if (nextElement) {
            this.quizResponses.fruitsLegumes = nextElement.textContent || "";
          }
        }
      });
    });
  }
  
  /**
   * Traite les réponses du quiz et génère les recommandations
   */
  private processQuizResponses(): void {
    // Récupérer toutes les réponses du quiz
    this.collectAllResponses();
    
    // Générer les recommandations
    const recommendations = this.recommender.getRecommendations(this.quizResponses);
    
    // Afficher les résultats
    this.displayResults(recommendations);
  }
  
  /**
   * Collecte toutes les réponses du quiz à partir du DOM
   */
  private collectAllResponses(): void {
    // Symptômes
    this.quizResponses.symptomes = [];
    document.querySelectorAll('.symptomes-section input[type="checkbox"]:checked').forEach(checkbox => {
      const nextElement = checkbox.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.symptomes.push(nextElement.textContent);
      }
    });
    
    // Objectifs
    this.quizResponses.objectifs = [];
    document.querySelectorAll('.objectifs-section input[type="checkbox"]:checked').forEach(checkbox => {
      const nextElement = checkbox.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.objectifs.push(nextElement.textContent);
      }
    });
    
    // Alimentation
    const dietRadio = document.querySelector('.alimentation-section input[type="radio"]:checked');
    if (dietRadio) {
      const nextElement = dietRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.alimentation = nextElement.textContent;
      }
    }
    
    // Activité physique
    const activityRadio = document.querySelector('.activite-physique-section input[type="radio"]:checked');
    if (activityRadio) {
      const nextElement = activityRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.activitePhysique = nextElement.textContent;
      }
    }
    
    // Qualité du sommeil
    const sleepRadio = document.querySelector('.sommeil-section input[type="radio"]:checked');
    if (sleepRadio) {
      const nextElement = sleepRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.qualiteSommeil = nextElement.textContent;
      }
    }
    
    // Niveau de stress
    const stressRadio = document.querySelector('.stress-section input[type="radio"]:checked');
    if (stressRadio) {
      const nextElement = stressRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.niveauStress = nextElement.textContent;
      }
    }
    
    // Consommation de viande
    const meatRadio = document.querySelector('.viande-section input[type="radio"]:checked');
    if (meatRadio) {
      const nextElement = meatRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.consommationViande = nextElement.textContent;
      }
    }
    
    // Consommation de poisson
    const fishRadio = document.querySelector('.poisson-section input[type="radio"]:checked');
    if (fishRadio) {
      const nextElement = fishRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.consommationPoisson = nextElement.textContent;
      }
    }
    
    // Consommation de fruits et légumes
    const fruitVegRadio = document.querySelector('.fruits-legumes-section input[type="radio"]:checked');
    if (fruitVegRadio) {
      const nextElement = fruitVegRadio.nextElementSibling;
      if (nextElement && nextElement.textContent) {
        this.quizResponses.fruitsLegumes = nextElement.textContent;
      }
    }
  }
  
  /**
   * Affiche les résultats des recommandations
   * @param {Recommendation[]} recommendations - Liste des recommandations générées
   */
  private displayResults(recommendations: Recommendation[]): void {
    // Créer le conteneur principal des résultats
    const resultsContainer = document.createElement('div');
    resultsContainer.className = 'results-container';
    
    // Ajouter le titre
    const title = document.createElement('h2');
    title.textContent = 'Vos Recommandations Personnalisées';
    resultsContainer.appendChild(title);
    
    // Ajouter la description
    const description = document.createElement('p');
    description.textContent = 'Basé sur vos réponses, voici les compléments alimentaires naturels qui pourraient vous aider :';
    resultsContainer.appendChild(description);
    
    // Ajouter les symptômes identifiés
    const symptomsSection = document.createElement('div');
    symptomsSection.className = 'symptoms-section';
    
    const symptomsTitle = document.createElement('h3');
    symptomsTitle.textContent = 'Symptômes identifiés :';
    symptomsSection.appendChild(symptomsTitle);
    
    const symptomsList = document.createElement('ul');
    this.quizResponses.symptomes.forEach(symptom => {
      const item = document.createElement('li');
      item.textContent = symptom;
      symptomsList.appendChild(item);
    });
    symptomsSection.appendChild(symptomsList);
    resultsContainer.appendChild(symptomsSection);
    
    // Ajouter les objectifs identifiés
    const objectivesSection = document.createElement('div');
    objectivesSection.className = 'objectives-section';
    
    const objectivesTitle = document.createElement('h3');
    objectivesTitle.textContent = 'Objectifs identifiés :';
    objectivesSection.appendChild(objectivesTitle);
    
    const objectivesList = document.createElement('ul');
    this.quizResponses.objectifs.forEach(objective => {
      const item = document.createElement('li');
      item.textContent = objective;
      objectivesList.appendChild(item);
    });
    objectivesSection.appendChild(objectivesList);
    resultsContainer.appendChild(objectivesSection);
    
    // Ajouter les recommandations principales
    const mainRecommendationsSection = document.createElement('div');
    mainRecommendationsSection.className = 'main-recommendations-section';
    
    const mainRecommendationsTitle = document.createElement('h3');
    mainRecommendationsTitle.textContent = 'Recommandations principales :';
    mainRecommendationsSection.appendChild(mainRecommendationsTitle);
    
    // Filtrer les recommandations principales
    const mainRecommendations = recommendations.filter(rec => rec.isPrimary);
    
    mainRecommendations.forEach(rec => {
      const recCard = this.createRecommendationCard(rec);
      mainRecommendationsSection.appendChild(recCard);
    });
    
    resultsContainer.appendChild(mainRecommendationsSection);
    
    // Ajouter les recommandations secondaires
    const secondaryRecommendationsSection = document.createElement('div');
    secondaryRecommendationsSection.className = 'secondary-recommendations-section';
    
    const secondaryRecommendationsTitle = document.createElement('h3');
    secondaryRecommendationsTitle.textContent = 'Recommandations complémentaires :';
    secondaryRecommendationsSection.appendChild(secondaryRecommendationsTitle);
    
    // Filtrer les recommandations secondaires
    const seco
(Content truncated due to size limit. Use line ranges to read in chunks)